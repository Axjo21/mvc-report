{% extends "base.html.twig" %}

{% block title %}Cards Game{% endblock %}

{% block main %}
<ul>
    <li><a href="{{ path('card_start') }}">Landing page</li></a>
    <li><a href="{{ path('card_deck') }}">Show Deck</li></a>
    <li><a href="{{ path('card_shuffle') }}">Shuffle Deck</li></a>
    <li><a href="{{ path('card_draw') }}">Draw Card</li></a>
    <li><a href="{{ path('card_draw:number_start') }}">Draw :number cards</li></a>
</ul>

<h1>Cards game</h1>

<p>
    Card-klassen har ett värde som representerar vilket kort det är.
    Card-klassen innehåller även en getter-metod för att komma åt värdet eftersom det är protected.
    BetterCard-klassen ärver från Card-klassen och implementerar funktionaliter för att ändra kortets värde.
    CardHand-klassen är en komposition av kort. Korten sparas i hand-medlemmsvariablen.
    Genom metoden add kan man lägga till kort i handen och genom metoderna getValues
    och getNumberOfCards kan man hämta ut kortens värde samt antalet kort.
<p>
<p>
    DeckOfCards har en representativ array av korten som medlemsvariabel.
    Genom shuffleDeck-metoden kan man slumpa kortens ordning och genom drawCard kan man dra ett kort,
    samt ta bort det från deck-medlemsvariabeln. 
    Remove tar bort kort och getNumberCards ger antalet kort som är kvar i kortleken.
</p>
<p>
    Jag upplevde att för att lösa uppgiftens kvar behövde man inte ha mer än DeckOfCards klassen
    och jag löste uppgiften till stor del genom endast den klassen till att börja med.
    Mot slutet av mitt arbete tillämpade jag även de andra klasserna i större utsträckning och ändrade DeckOfCards
    så att även de andra klasserna implementerades för att hålla mig till uppgiftens krav om klasserna. 
</p>
<img src="img/uml-mvc02.png" alt="UML MVC02"/>
{% endblock %}
